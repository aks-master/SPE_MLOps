---
# tasks file for eks_deploy
- name: Configure AWS credentials for Ansible
  set_fact:
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    aws_region: "{{ aws_region }}"

- name: Update kubeconfig
  command: "aws eks update-kubeconfig --region {{ aws_region }} --name flask-app-cluster2"
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_DEFAULT_REGION: "{{ aws_region }}"

- name: Verify kubectl access
  command: "kubectl get nodes"
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_DEFAULT_REGION: "{{ aws_region }}"
  register: kubectl_get_nodes
  changed_when: false
  failed_when: kubectl_get_nodes.rc != 0

- name: Debug kubectl output
  debug:
    var: kubectl_get_nodes.stdout_lines

- name: Create Kubernetes Secret for capstone-test
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: capstone-secret
        namespace: default
      stringData:
        CAPSTONE_TEST: "{{ capstone_test_secret }}"
  environment:
    K8S_AUTH_KUBECONFIG: "{{ kubeconfig_path }}"
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_DEFAULT_REGION: "{{ aws_region }}"

- name: Deploy application from deployment.yaml
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../deployment.yaml"
  environment:
    K8S_AUTH_KUBECONFIG: "{{ kubeconfig_path }}"
    AWS_ACCESS_KEY_ID: "{{ aws_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}"
    AWS_DEFAULT_REGION: "{{ aws_region }}"
